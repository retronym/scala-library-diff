package scala.collection
trait SortedSet[A] extends scala.AnyRef with scala.collection.Set[A] with scala.collection.SortedSetLike[A, scala.collection.SortedSet[A]] {
  def $init$(): scala.Unit = { /* compiled code */ }
  override def empty: scala.collection.SortedSet[A] = { /* compiled code */ }
}
object SortedSet extends scala.collection.generic.SortedSetFactory[scala.collection.SortedSet] {
  def this() = { /* compiled code */ }
  def empty[A](implicit ord: scala.Ordering[A]): scala.collection.immutable.SortedSet[A] = { /* compiled code */ }
  def canBuildFrom[A](implicit ord: scala.Ordering[A]): scala.collection.generic.CanBuildFrom[scala.collection.generic.SortedSetFactory.Coll, A, scala.collection.SortedSet[A]] = { /* compiled code */ }
  implicit override def newCanBuildFrom[A](implicit ord: scala.Ordering[A]): scala.collection.generic.CanBuildFrom[scala.collection.generic.SortedSetFactory.Coll, A, scala.collection.SortedSet[A]] = { /* compiled code */ }
}
