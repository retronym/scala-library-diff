package scala.collection
trait GenSet[A] extends scala.AnyRef with scala.collection.GenSetLike[A, scala.collection.GenSet[A]] with scala.collection.GenIterable[A] with scala.collection.generic.GenericSetTemplate[A, scala.collection.GenSet] {
  def $init$(): scala.Unit = { /* compiled code */ }
  override def companion: scala.collection.generic.GenericCompanion[scala.collection.GenSet] = { /* compiled code */ }
  def seq: scala.collection.Set[A]
}
object GenSet extends scala.collection.generic.GenTraversableFactory[scala.collection.GenSet] {
  def this() = { /* compiled code */ }
  implicit def canBuildFrom[A]: scala.collection.generic.GenTraversableFactory.GenericCanBuildFrom[A] = { /* compiled code */ }
  def newBuilder[A]: scala.collection.mutable.Builder[A, scala.collection.immutable.Set[A]] = { /* compiled code */ }
}
