package scala.collection.mutable
trait Traversable[A] extends scala.AnyRef with scala.collection.Traversable[A] with scala.collection.generic.GenericTraversableTemplate[A, scala.collection.mutable.Traversable] with scala.collection.TraversableLike[A, scala.collection.mutable.Traversable[A]] with scala.Mutable {
  def $init$(): scala.Unit = { /* compiled code */ }
  override def companion: scala.collection.generic.GenericCompanion[scala.collection.mutable.Traversable] = { /* compiled code */ }
  override def seq: scala.collection.mutable.Traversable[A] = { /* compiled code */ }
}
object Traversable extends scala.collection.generic.GenTraversableFactory[scala.collection.mutable.Traversable] with scala.collection.generic.TraversableFactory[scala.collection.mutable.Traversable] {
  def this() = { /* compiled code */ }
  implicit def canBuildFrom[A]: scala.collection.generic.CanBuildFrom[scala.collection.generic.GenericCompanion.Coll, A, scala.collection.mutable.Traversable[A]] = { /* compiled code */ }
  def newBuilder[A]: scala.collection.mutable.Builder[A, scala.collection.mutable.Traversable[A]] = { /* compiled code */ }
}
