package scala.collection.mutable
@scala.deprecated("Adaptors are inherently unreliable and prone to performance problems.")
class ImmutableMapAdaptor[A, B] extends scala.collection.mutable.AbstractMap[A, B] with scala.collection.mutable.Map[A, B] with scala.Serializable {
  protected var imap: scala.collection.immutable.Map[A, B] = { /* compiled code */ }
  def this(imap: scala.collection.immutable.Map[A, B]) = { /* compiled code */ }
  override def size: scala.Int = { /* compiled code */ }
  def get(key: A): scala.Option[B] = { /* compiled code */ }
  override def isEmpty: scala.Boolean = { /* compiled code */ }
  override def apply(key: A): B = { /* compiled code */ }
  override def contains(key: A): scala.Boolean = { /* compiled code */ }
  override def isDefinedAt(key: A): scala.Boolean = { /* compiled code */ }
  override def keySet: scala.collection.Set[A] = { /* compiled code */ }
  override def keysIterator: scala.collection.Iterator[A] = { /* compiled code */ }
  @scala.annotation.migration("`keys` returns Iterable[A] rather than Iterator[A].")
  override def keys: scala.collection.Iterable[A] = { /* compiled code */ }
  override def valuesIterator: scala.collection.Iterator[B] = { /* compiled code */ }
  @scala.annotation.migration("`values` returns Iterable[B] rather than Iterator[B].")
  override def values: scala.collection.Iterable[B] = { /* compiled code */ }
  def iterator: scala.collection.Iterator[scala.Tuple2[A, B]] = { /* compiled code */ }
  override def toList: scala.List[scala.Tuple2[A, B]] = { /* compiled code */ }
  override def update(key: A, value: B): scala.Unit = { /* compiled code */ }
  def -=(key: A): scala.collection.mutable.ImmutableMapAdaptor.type = { /* compiled code */ }
  def +=(kv: scala.Tuple2[A, B]): scala.collection.mutable.ImmutableMapAdaptor.type = { /* compiled code */ }
  override def clear(): scala.Unit = { /* compiled code */ }
  override def transform(f: scala.Function2[A, B, B]): scala.collection.mutable.ImmutableMapAdaptor.type = { /* compiled code */ }
  override def retain(p: scala.Function2[A, B, scala.Boolean]): scala.collection.mutable.ImmutableMapAdaptor.type = { /* compiled code */ }
  override def toString(): scala.Predef.String = { /* compiled code */ }
}
