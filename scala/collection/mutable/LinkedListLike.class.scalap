package scala.collection.mutable
@scala.deprecated("Low-level linked lists are deprecated due to idiosyncracies in interface and incomplete features.")
trait LinkedListLike[A, This <: scala.collection.mutable.Seq[A] with scala.collection.mutable.LinkedListLike[A, This]] extends scala.AnyRef with scala.collection.mutable.SeqLike[A, This] {
 this: scala.collection.mutable.LinkedListLike[A, This] =>
  def $init$(): scala.Unit = { /* compiled code */ }
  var elem: A = { /* compiled code */ }
  var next: This = { /* compiled code */ }
  override def isEmpty: scala.Boolean = { /* compiled code */ }
  override def length: scala.Int = { /* compiled code */ }
  override def head: A = { /* compiled code */ }
  override def tail: This = { /* compiled code */ }
  def append(that: This): This = { /* compiled code */ }
  def insert(that: This): scala.Unit = { /* compiled code */ }
  override def drop(n: scala.Int): This = { /* compiled code */ }
  override def apply(n: scala.Int): A = { /* compiled code */ }
  def update(n: scala.Int, x: A): scala.Unit = { /* compiled code */ }
  def get(n: scala.Int): scala.Option[A] = { /* compiled code */ }
  override def iterator: scala.collection.Iterator[A] = { /* compiled code */ }
  override def foreach[B](f: scala.Function1[A, B]): scala.Unit = { /* compiled code */ }
  override def clone(): This = { /* compiled code */ }
}
