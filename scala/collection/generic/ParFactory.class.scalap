package scala.collection.generic
abstract class ParFactory[CC[X] <: scala.collection.parallel.ParIterable[X] with scala.collection.generic.GenericParTemplate[X, CC]] extends scala.collection.generic.GenTraversableFactory[CC] with scala.collection.generic.GenericParCompanion[CC] {
  def this() = { /* compiled code */ }
  class GenericCanCombineFrom[A] extends scala.collection.generic.GenTraversableFactory.GenericCanBuildFrom[A] with scala.collection.generic.CanCombineFrom[CC[_], A, CC[A]] {
    def this() = { /* compiled code */ }
    override def apply(from: scala.collection.generic.GenericCompanion.Coll): scala.collection.parallel.Combiner[A, CC[A]] = { /* compiled code */ }
    override def apply(): scala.collection.parallel.Combiner[A, CC[A]] = { /* compiled code */ }
  }
}
