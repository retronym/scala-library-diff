package scala.collection.generic
abstract class ParSetFactory[CC[X] <: scala.collection.parallel.ParSet[X] with scala.collection.parallel.ParSetLike[X, CC[X], _] with scala.collection.generic.GenericParTemplate[X, CC]] extends scala.collection.generic.GenSetFactory[CC] with scala.collection.generic.GenericParCompanion[CC] {
  def this() = { /* compiled code */ }
  def newBuilder[A]: scala.collection.parallel.Combiner[A, CC[A]] = { /* compiled code */ }
  def newCombiner[A]: scala.collection.parallel.Combiner[A, CC[A]]
  class GenericCanCombineFrom[A] extends scala.AnyRef with scala.collection.generic.CanCombineFrom[CC[_], A, CC[A]] {
    def this() = { /* compiled code */ }
    override def apply(from: scala.collection.generic.GenericCompanion.Coll): scala.collection.parallel.Combiner[A, CC[A]] = { /* compiled code */ }
    override def apply(): scala.collection.parallel.Combiner[A, CC[A]] = { /* compiled code */ }
  }
}
