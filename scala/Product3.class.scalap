package scala
trait Product3[+T1, +T2, +T3] extends scala.Any with scala.Product {
  def $init$(): scala.Unit = { /* compiled code */ }
  override def productArity: scala.Int = { /* compiled code */ }
  @scala.throws[scala.IndexOutOfBoundsException](scala.IndexOutOfBoundsException)
  override def productElement(n: scala.Int): scala.Any = { /* compiled code */ }
  def _1: T1
  def _2: T2
  def _3: T3
}
object Product3 extends scala.AnyRef {
  def this() = { /* compiled code */ }
  def unapply[T1, T2, T3](x: scala.Product3[T1, T2, T3]): scala.Option[scala.Product3[T1, T2, T3]] = { /* compiled code */ }
}
