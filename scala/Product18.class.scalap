package scala
trait Product18[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18] extends scala.Any with scala.Product {
  def $init$(): scala.Unit = { /* compiled code */ }
  override def productArity: scala.Int = { /* compiled code */ }
  @scala.throws[scala.IndexOutOfBoundsException](scala.IndexOutOfBoundsException)
  override def productElement(n: scala.Int): scala.Any = { /* compiled code */ }
  def _1: T1
  def _2: T2
  def _3: T3
  def _4: T4
  def _5: T5
  def _6: T6
  def _7: T7
  def _8: T8
  def _9: T9
  def _10: T10
  def _11: T11
  def _12: T12
  def _13: T13
  def _14: T14
  def _15: T15
  def _16: T16
  def _17: T17
  def _18: T18
}
object Product18 extends scala.AnyRef {
  def this() = { /* compiled code */ }
  def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18](x: scala.Product18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]): scala.Option[scala.Product18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]] = { /* compiled code */ }
}
