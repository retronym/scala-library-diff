package scala.util
final case class Failure[+T](exception: scala.Throwable) extends scala.util.Try[T] with scala.Product with scala.Serializable {
  val exception: scala.Throwable = { /* compiled code */ }
  def isFailure: scala.Boolean = { /* compiled code */ }
  def isSuccess: scala.Boolean = { /* compiled code */ }
  def recoverWith[U >: T](f: scala.PartialFunction[scala.Throwable, scala.util.Try[U]]): scala.util.Try[U] = { /* compiled code */ }
  def get: T = { /* compiled code */ }
  def flatMap[U](f: scala.Function1[T, scala.util.Try[U]]): scala.util.Try[U] = { /* compiled code */ }
  def flatten[U](implicit ev: scala.Predef.<:<[T, scala.util.Try[U]]): scala.util.Try[U] = { /* compiled code */ }
  def foreach[U](f: scala.Function1[T, U]): scala.Unit = { /* compiled code */ }
  def map[U](f: scala.Function1[T, U]): scala.util.Try[U] = { /* compiled code */ }
  def filter(p: scala.Function1[T, scala.Boolean]): scala.util.Try[T] = { /* compiled code */ }
  def recover[U >: T](rescueException: scala.PartialFunction[scala.Throwable, U]): scala.util.Try[U] = { /* compiled code */ }
  def failed: scala.util.Try[scala.Throwable] = { /* compiled code */ }
  def copy[T](exception: scala.Throwable): scala.util.Failure[T] = { /* compiled code */ }
  override def productPrefix: java.lang.String = { /* compiled code */ }
  def productArity: scala.Int = { /* compiled code */ }
  def productElement(x$1: scala.Int): scala.Any = { /* compiled code */ }
  override def productIterator: scala.collection.Iterator[scala.Any] = { /* compiled code */ }
  def canEqual(x$1: scala.Any): scala.Boolean = { /* compiled code */ }
  override def hashCode(): scala.Int = { /* compiled code */ }
  override def toString(): java.lang.String = { /* compiled code */ }
  override def equals(x$1: scala.Any): scala.Boolean = { /* compiled code */ }
}
object Failure extends scala.AnyRef with scala.Serializable {
  def this() = { /* compiled code */ }
  final override def toString(): java.lang.String = { /* compiled code */ }
  def apply[T](exception: scala.Throwable): scala.util.Failure[T] = { /* compiled code */ }
  def unapply[T](x$0: scala.util.Failure[T]): scala.Option[scala.Throwable] = { /* compiled code */ }
}
