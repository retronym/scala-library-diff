package scala
trait Function6[-T1, -T2, -T3, -T4, -T5, -T6, +R] extends scala.AnyRef {
 this: scala.Function6[T1, T2, T3, T4, T5, T6, R] =>
  def $init$(): scala.Unit = { /* compiled code */ }
  def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6): R
  @scala.annotation.unspecialized
  def curried: scala.Function1[T1, scala.Function1[T2, scala.Function1[T3, scala.Function1[T4, scala.Function1[T5, scala.Function1[T6, R]]]]]] = { /* compiled code */ }
  @scala.annotation.unspecialized
  def tupled: scala.Function1[scala.Tuple6[T1, T2, T3, T4, T5, T6], R] = { /* compiled code */ }
  override def toString(): java.lang.String = { /* compiled code */ }
}
